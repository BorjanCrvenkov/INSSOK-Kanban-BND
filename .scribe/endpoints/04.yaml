name: 'Task routes'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/tasks
    metadata:
      groupName: 'Task routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Task index'
      description: 'Default sort: order'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      "filter['filter_name']":
        name: "filter['filter_name']"
        description: 'Available filters: title, description, priority, due_date, type, reporter_id, assignee_id'
        required: false
        example: |-
          filter[title]=test.
          Multiple filters example: filter[title]=test&filter[priority]=low
        type: string
        custom: []
      include:
        name: include
        description: 'Available includes: column, assignee, reporter, users_followed_by, comments'
        required: false
        example: |-
          include=column
          Multiple includes example: include=column,assignee
        type: string
        custom: []
    cleanQueryParameters:
      "filter['filter_name']": |-
        filter[title]=test.
        Multiple filters example: filter[title]=test&filter[priority]=low
      include: |-
        include=column
        Multiple includes example: include=column,assignee
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tasks
    metadata:
      groupName: 'Task routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Task store'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        custom: []
      priority:
        name: priority
        description: 'Must be one of <code>lowest</code>, <code>low</code>, <code>medium</code>, <code>high</code>, or <code>highest</code>.'
        required: true
        example: lowest
        type: string
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date.'
        required: false
        example: '2023-06-02T13:43:20'
        type: string
        custom: []
      type:
        name: type
        description: 'Must be one of <code>story</code>, <code>task</code>, or <code>bug</code>.'
        required: true
        example: bug
        type: string
        custom: []
      order:
        name: order
        description: ''
        required: false
        example: 17
        type: integer
        custom: []
      column_id:
        name: column_id
        description: ''
        required: true
        example: 17
        type: integer
        custom: []
      assignee_id:
        name: assignee_id
        description: ''
        required: false
        example: 17
        type: integer
        custom: []
      label:
        name: label
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters:
      title: consequatur
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      priority: lowest
      due_date: '2023-06-02T13:43:20'
      type: bug
      order: 17
      column_id: 17
      assignee_id: 17
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/{id}'
    metadata:
      groupName: 'Task routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Task show'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters:
      include:
        name: include
        description: 'Available includes: column, assignee, reporter, users_followed_by, comments'
        required: false
        example: |-
          include=column
          Multiple includes example: include=column,assignee
        type: string
        custom: []
    cleanQueryParameters:
      include: |-
        include=column
        Multiple includes example: include=column,assignee
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/tasks/{id}'
    metadata:
      groupName: 'Task routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Task update'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: consequatur
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        custom: []
      priority:
        name: priority
        description: 'Must be one of <code>lowest</code>, <code>low</code>, <code>medium</code>, <code>high</code>, or <code>highest</code>.'
        required: false
        example: lowest
        type: string
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date.'
        required: false
        example: '2023-06-02T13:43:20'
        type: string
        custom: []
      type:
        name: type
        description: 'Must be one of <code>story</code>, <code>task</code>, or <code>bug</code>.'
        required: false
        example: bug
        type: string
        custom: []
      order:
        name: order
        description: ''
        required: false
        example: 17
        type: integer
        custom: []
      column_id:
        name: column_id
        description: ''
        required: false
        example: 17
        type: integer
        custom: []
      assignee_id:
        name: assignee_id
        description: ''
        required: false
        example: 17
        type: integer
        custom: []
      label:
        name: label
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters:
      title: consequatur
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      priority: lowest
      due_date: '2023-06-02T13:43:20'
      type: bug
      order: 17
      column_id: 17
      assignee_id: 17
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tasks/{id}'
    metadata:
      groupName: 'Task routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Task delete'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
