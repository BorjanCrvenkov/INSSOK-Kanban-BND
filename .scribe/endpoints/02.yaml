name: 'Board routes'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/boards
    metadata:
      groupName: 'Board routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Board index'
      description: 'Default sort: name'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      "filter['filter_name']":
        name: "filter['filter_name']"
        description: 'Available filters: name, description, workspace_id.'
        required: false
        example: |-
          filter[name]=test.
          Multiple filters example: filter[name]=test&filter[workspace_id]=1.
        type: string
        custom: []
      sort:
        name: sort
        description: |-
          Available sorts: name, description, workspace_id.
          Adding - before the sort name will sort in descending order.
        required: false
        example: |-
          sort=name.
          Multiple sorts example: sort=name,workspace_id.
        type: string
        custom: []
      include:
        name: include
        description: 'Available includes: workspace, columns, columns.tasks, columns.tasks.assignee, columns.tasks.reporter, columns.tasks.comments, columns.tasks.comments.user, workspace.users'
        required: false
        example: |-
          include=workspace
          Multiple includes example: include=workspace,columns
        type: string
        custom: []
    cleanQueryParameters:
      "filter['filter_name']": |-
        filter[name]=test.
        Multiple filters example: filter[name]=test&filter[workspace_id]=1.
      sort: |-
        sort=name.
        Multiple sorts example: sort=name,workspace_id.
      include: |-
        include=workspace
        Multiple includes example: include=workspace,columns
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/boards
    metadata:
      groupName: 'Board routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Boards store'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        custom: []
      workspace_id:
        name: workspace_id
        description: ''
        required: true
        example: 17
        type: integer
        custom: []
      task_prefix:
        name: task_prefix
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
    cleanBodyParameters:
      name: consequatur
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      workspace_id: 17
      task_prefix: consequatur
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/boards/{id}'
    metadata:
      groupName: 'Board routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Board show'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the board.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      include:
        name: include
        description: 'Available includes: workspace, columns, columns.tasks, columns.tasks.assignee, columns.tasks.reporter, columns.tasks.comments, columns.tasks.comments.user, workspace.users'
        required: false
        example: |-
          include=workspace
          Multiple includes example: include=workspace,columns
        type: string
        custom: []
    cleanQueryParameters:
      include: |-
        include=workspace
        Multiple includes example: include=workspace,columns
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/boards/{id}'
    metadata:
      groupName: 'Board routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Board update'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the board.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: consequatur
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        custom: []
      workspace_id:
        name: workspace_id
        description: ''
        required: false
        example: 17
        type: integer
        custom: []
      task_prefix:
        name: task_prefix
        description: ''
        required: false
        example: consequatur
        type: string
        custom: []
    cleanBodyParameters:
      name: consequatur
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      workspace_id: 17
      task_prefix: consequatur
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/boards/{id}'
    metadata:
      groupName: 'Board routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Board delete'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the board.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
