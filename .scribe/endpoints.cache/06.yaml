## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User routes'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: 'User routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User index'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      "filter['filter_name']":
        name: "filter['filter_name']"
        description: 'Available filters: first_name, last_name, username, email, workspace_id'
        required: false
        example: |-
          filter[name]=first_name.
          Multiple filters example: filter[first_name]=test&filter[last_name]=test
        type: string
        custom: []
      sort:
        name: sort
        description: |-
          Available sorts: first_name, last_name, username, email,
          Adding - before the sort name will sort in descending order.
        required: false
        example: |-
          sort=first_name
          Multiple sorts example: sort=first_name,last_name
        type: string
        custom: []
      include:
        name: include
        description: 'Available includes: assigned_tasks, reported_tasks, followed_tasks, workspaces'
        required: false
        example: |-
          include=assigned_tasks
          Multiple includes example: include=assigned_tasks, workspaces
        type: string
        custom: []
    cleanQueryParameters:
      "filter['filter_name']": |-
        filter[name]=first_name.
        Multiple filters example: filter[first_name]=test&filter[last_name]=test
      sort: |-
        sort=first_name
        Multiple sorts example: sort=first_name,last_name
      include: |-
        include=assigned_tasks
        Multiple includes example: include=assigned_tasks, workspaces
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: 'User routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User store'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      username:
        name: username
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: carolyne.luettgen@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: ij-e/dl4m
        type: string
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        custom: []
      role_id:
        name: role_id
        description: ''
        required: false
        example: 17
        type: integer
        custom: []
    cleanBodyParameters:
      first_name: consequatur
      last_name: consequatur
      username: consequatur
      email: carolyne.luettgen@example.org
      password: ij-e/dl4m
      role_id: 17
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: 'User routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User show'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      include:
        name: include
        description: 'Available includes: assigned_tasks, reported_tasks, followed_tasks, workspaces'
        required: false
        example: |-
          include=assigned_tasks
          Multiple includes example: include=assigned_tasks, workspaces
        type: string
        custom: []
    cleanQueryParameters:
      include: |-
        include=assigned_tasks
        Multiple includes example: include=assigned_tasks, workspaces
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: 'User routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User delete'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/users/{id}'
    metadata:
      groupName: 'User routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User update'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: false
        example: consequatur
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: false
        example: consequatur
        type: string
        custom: []
      username:
        name: username
        description: ''
        required: false
        example: consequatur
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: carolyne.luettgen@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: false
        example: ij-e/dl4m
        type: string
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        custom: []
      role_id:
        name: role_id
        description: ''
        required: false
        example: 17
        type: integer
        custom: []
    cleanBodyParameters:
      first_name: consequatur
      last_name: consequatur
      username: consequatur
      email: carolyne.luettgen@example.org
      password: ij-e/dl4m
      role_id: 17
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
