## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Workspace routes'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/workspaces
    metadata:
      groupName: 'Workspace routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Workspace index'
      description: 'Default sort: name'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      "filter['filter_name']":
        name: "filter['filter_name']"
        description: 'Available filters: name, user_id'
        required: false
        example: |-
          filter[name]=test.
          Multiple filters example: filter[user_id]=1&filter[name]=test
        type: string
        custom: []
      sort:
        name: sort
        description: |-
          Available sorts: name
          Adding - before the sort name will sort in descending order.
        required: false
        example: sort=name
        type: string
        custom: []
      include:
        name: include
        description: 'Available includes: boards, users'
        required: false
        example: |-
          include=boards
          Multiple includes example: include=boards,users
        type: string
        custom: []
    cleanQueryParameters:
      "filter['filter_name']": |-
        filter[name]=test.
        Multiple filters example: filter[user_id]=1&filter[name]=test
      sort: sort=name
      include: |-
        include=boards
        Multiple includes example: include=boards,users
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/workspaces
    metadata:
      groupName: 'Workspace routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Workspace store'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        custom: []
    cleanBodyParameters:
      name: consequatur
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/workspaces/{id}'
    metadata:
      groupName: 'Workspace routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Workspace show'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the workspace.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      include:
        name: include
        description: 'Available includes: boards, users'
        required: false
        example: |-
          include=boards
          Multiple includes example: include=boards,users
        type: string
        custom: []
    cleanQueryParameters:
      include: |-
        include=boards
        Multiple includes example: include=boards,users
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/workspaces/{id}'
    metadata:
      groupName: 'Workspace routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Workspace update'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the workspace.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: consequatur
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        custom: []
    cleanBodyParameters:
      name: consequatur
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/workspaces/{id}'
    metadata:
      groupName: 'Workspace routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Workspace delete'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the workspace.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
